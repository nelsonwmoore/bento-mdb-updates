<?xml version='1.0' encoding='UTF-8'?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:neo4j="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
  <changeSet id="1" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="2" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="3" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}), (n1:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="4" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="5" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}), (n1:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="6" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'LA2-8',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="7" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}), (n1:term {value:'Male',origin_id:'LA2-8',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="8" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'M',origin_id:'LA15170-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="9" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}), (n1:term {value:'M',origin_id:'LA15170-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="10" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="11" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}), (n1:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="12" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="13" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}), (n1:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="14" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="15" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="16" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="17" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="18" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'female',origin_id:'RID5654',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="19" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'female',origin_id:'RID5654',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="20" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female structure (body structure)',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="21" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female structure (body structure)',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="22" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female (finding)',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="23" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female (finding)',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="24" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female individual',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="25" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female individual',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="26" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female structure',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="27" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female structure',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="28" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'LA3-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="29" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'LA3-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="30" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="31" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 8 weeks',origin_id:'6401107',origin_version:'1',origin_definition:'Every eight weeks.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="32" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every 8 weeks',origin_id:'6401107',origin_version:'1',origin_definition:'Every eight weeks.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="33" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Eight Weeks',origin_id:'C103389',origin_definition:'Every eight weeks.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="34" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every 8 weeks',origin_id:'6401107',origin_version:'1',origin_definition:'Every eight weeks.',origin_name:'caDSR'}), (n1:term {value:'Every Eight Weeks',origin_id:'C103389',origin_definition:'Every eight weeks.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="35" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every five weeks',origin_id:'6401112',origin_version:'1',origin_definition:'Every five weeks.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="36" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every five weeks',origin_id:'6401112',origin_version:'1',origin_definition:'Every five weeks.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="37" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Five Weeks',origin_id:'C103390',origin_definition:'Every five weeks.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="38" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every five weeks',origin_id:'6401112',origin_version:'1',origin_definition:'Every five weeks.',origin_name:'caDSR'}), (n1:term {value:'Every Five Weeks',origin_id:'C103390',origin_definition:'Every five weeks.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="39" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every night',origin_id:'6401090',origin_version:'1',origin_definition:'Occurring or done each night.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="40" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every night',origin_id:'6401090',origin_version:'1',origin_definition:'Occurring or done each night.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="41" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Night',origin_id:'C139178',origin_definition:'Occurring or done each night.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="42" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every night',origin_id:'6401090',origin_version:'1',origin_definition:'Occurring or done each night.',origin_name:'caDSR'}), (n1:term {value:'Every Night',origin_id:'C139178',origin_definition:'Occurring or done each night.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="43" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every night',origin_id:'LA14806-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="44" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Night',origin_id:'C139178',origin_definition:'Occurring or done each night.',origin_name:'NCIt'}), (n1:term {value:'Every night',origin_id:'LA14806-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="45" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice a day',origin_id:'2567818',origin_version:'1',origin_definition:'Two times per day, at unspecified times.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="46" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Twice a day',origin_id:'2567818',origin_version:'1',origin_definition:'Two times per day, at unspecified times.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="47" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="48" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice a day',origin_id:'2567818',origin_version:'1',origin_definition:'Two times per day, at unspecified times.',origin_name:'caDSR'}), (n1:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="49" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice a day',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="50" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'Twice a day',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="51" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'bid - Twice a day',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="52" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'bid - Twice a day',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="53" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice a day (qualifier value)',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="54" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'Twice a day (qualifier value)',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="55" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'bd - bis die',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="56" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'bd - bis die',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="57" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'bd - Twice daily',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="58" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'bd - Twice daily',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="59" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice daily',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="60" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Daily',origin_id:'C64496',origin_definition:'Two times per day, at unspecified times.',origin_name:'NCIt'}), (n1:term {value:'Twice daily',origin_id:'229799001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="61" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice a week',origin_id:'2567832',origin_version:'1',origin_definition:'Two times per week.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="62" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Twice a week',origin_id:'2567832',origin_version:'1',origin_definition:'Two times per week.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="63" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="64" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice a week',origin_id:'2567832',origin_version:'1',origin_definition:'Two times per week.',origin_name:'caDSR'}), (n1:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="65" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice weekly',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="66" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}), (n1:term {value:'Twice weekly',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="67" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'2x/wk',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="68" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}), (n1:term {value:'2x/wk',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="69" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Two times a week',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="70" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}), (n1:term {value:'Two times a week',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="71" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice a week',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="72" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}), (n1:term {value:'Twice a week',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="73" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Twice weekly (qualifier value)',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="74" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Twice Weekly',origin_id:'C64497',origin_definition:'Two times per week.',origin_name:'NCIt'}), (n1:term {value:'Twice weekly (qualifier value)',origin_id:'229800002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="75" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 8 hours',origin_id:'3332793',origin_version:'1',origin_definition:'Every eight hours.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="76" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every 8 hours',origin_id:'3332793',origin_version:'1',origin_definition:'Every eight hours.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="77" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="78" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every 8 hours',origin_id:'3332793',origin_version:'1',origin_definition:'Every eight hours.',origin_name:'caDSR'}), (n1:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="79" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every eight hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="80" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'}), (n1:term {value:'Every eight hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="81" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 8 hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="82" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'}), (n1:term {value:'Every 8 hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="83" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'q8h - Every eight hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="84" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'}), (n1:term {value:'q8h - Every eight hours',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="85" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every eight hours (qualifier value)',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="86" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Eight Hours',origin_id:'C64523',origin_definition:'Every eight hours.',origin_name:'NCIt'}), (n1:term {value:'Every eight hours (qualifier value)',origin_id:'307469008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="87" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every other day',origin_id:'2567823',origin_version:'1',origin_definition:'Every other day.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="88" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every other day',origin_id:'2567823',origin_version:'1',origin_definition:'Every other day.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="89" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="90" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every other day',origin_id:'2567823',origin_version:'1',origin_definition:'Every other day.',origin_name:'caDSR'}), (n1:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="91" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every other day',origin_id:'LA24997-1',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="92" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'}), (n1:term {value:'Every other day',origin_id:'LA24997-1',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="93" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every other day',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="94" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'}), (n1:term {value:'Every other day',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="95" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Alternate days',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="96" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'}), (n1:term {value:'Alternate days',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="97" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Alternate days (qualifier value)',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="98" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Other Day',origin_id:'C64525',origin_definition:'Every other day.',origin_name:'NCIt'}), (n1:term {value:'Alternate days (qualifier value)',origin_id:'225760004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="99" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Three times per day',origin_id:'3162685',origin_version:'1',origin_definition:'Three times per day. (NCI)',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="100" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Three times per day',origin_id:'3162685',origin_version:'1',origin_definition:'Three times per day. (NCI)',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="101" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Three times a week',origin_id:'2567781',origin_version:'1',origin_definition:'Three times per week.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="102" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Three times a week',origin_id:'2567781',origin_version:'1',origin_definition:'Three times per week.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="103" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Three Times Weekly',origin_id:'C64528',origin_definition:'Three times per week.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="104" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Three times a week',origin_id:'2567781',origin_version:'1',origin_definition:'Three times per week.',origin_name:'caDSR'}), (n1:term {value:'Three Times Weekly',origin_id:'C64528',origin_definition:'Three times per week.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="105" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Three times weekly',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="106" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Three Times Weekly',origin_id:'C64528',origin_definition:'Three times per week.',origin_name:'NCIt'}), (n1:term {value:'Three times weekly',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="107" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Three times weekly (qualifier value)',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="108" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Three Times Weekly',origin_id:'C64528',origin_definition:'Three times per week.',origin_name:'NCIt'}), (n1:term {value:'Three times weekly (qualifier value)',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="109" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Thrice weekly',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="110" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Three Times Weekly',origin_id:'C64528',origin_definition:'Three times per week.',origin_name:'NCIt'}), (n1:term {value:'Thrice weekly',origin_id:'229804006',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="111" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Four times a day',origin_id:'3162701',origin_version:'1',origin_definition:'Four times per day. (NCI)',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="112" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Four times a day',origin_id:'3162701',origin_version:'1',origin_definition:'Four times per day. (NCI)',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="113" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every three days',origin_id:'2576606',origin_version:'1',origin_definition:'Once every three days. (NCI)',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="114" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every three days',origin_id:'2576606',origin_version:'1',origin_definition:'Once every three days. (NCI)',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="115" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="116" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every three days',origin_id:'2576606',origin_version:'1',origin_definition:'Once every three days. (NCI)',origin_name:'caDSR'}), (n1:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="117" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every three days',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="118" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}), (n1:term {value:'Every three days',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="119" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 3 days',origin_id:'LA24998-9',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="120" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}), (n1:term {value:'Every 3 days',origin_id:'LA24998-9',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="121" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 3 days',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="122" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}), (n1:term {value:'Every 3 days',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="123" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every three days (qualifier value)',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="124" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}), (n1:term {value:'Every three days (qualifier value)',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="125" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'q3day',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="126" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Three Days',origin_id:'C64533',origin_definition:'Every three days.',origin_name:'NCIt'}), (n1:term {value:'q3day',origin_id:'396128003',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="127" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four days',origin_id:'2576610',origin_version:'1',origin_definition:'Once every four days.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="128" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every four days',origin_id:'2576610',origin_version:'1',origin_definition:'Once every four days.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="129" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="130" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every four days',origin_id:'2576610',origin_version:'1',origin_definition:'Once every four days.',origin_name:'caDSR'}), (n1:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="131" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four days',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="132" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'}), (n1:term {value:'Every four days',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="133" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 4 days',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="134" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'}), (n1:term {value:'Every 4 days',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="135" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four days (qualifier value)',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="136" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'}), (n1:term {value:'Every four days (qualifier value)',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="137" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'q4day',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="138" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Days',origin_id:'C64534',origin_definition:'Every four days.',origin_name:'NCIt'}), (n1:term {value:'q4day',origin_id:'396132009',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="139" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four months',origin_id:'2576611',origin_version:'1',origin_definition:'Once every four months.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="140" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every four months',origin_id:'2576611',origin_version:'1',origin_definition:'Once every four months.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="141" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Four Months',origin_id:'C64538',origin_definition:'Every four months.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="142" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every four months',origin_id:'2576611',origin_version:'1',origin_definition:'Once every four months.',origin_name:'caDSR'}), (n1:term {value:'Every Four Months',origin_id:'C64538',origin_definition:'Every four months.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="143" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four months',origin_id:'307478002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="144" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Months',origin_id:'C64538',origin_definition:'Every four months.',origin_name:'NCIt'}), (n1:term {value:'Every four months',origin_id:'307478002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="145" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every four months (qualifier value)',origin_id:'307478002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="146" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Four Months',origin_id:'C64538',origin_definition:'Every four months.',origin_name:'NCIt'}), (n1:term {value:'Every four months (qualifier value)',origin_id:'307478002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="147" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every six weeks',origin_id:'2576620',origin_version:'1',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="148" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every six weeks',origin_id:'2576620',origin_version:'1',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="149" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Six Weeks',origin_id:'C89788',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="150" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every six weeks',origin_id:'2576620',origin_version:'1',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'caDSR'}), (n1:term {value:'Every Six Weeks',origin_id:'C89788',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="151" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every six weeks',origin_id:'307477007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="152" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Six Weeks',origin_id:'C89788',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'NCIt'}), (n1:term {value:'Every six weeks',origin_id:'307477007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="153" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every six weeks (qualifier value)',origin_id:'307477007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="154" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Six Weeks',origin_id:'C89788',origin_definition:'To be done at regular intervals of every six weeks.',origin_name:'NCIt'}), (n1:term {value:'Every six weeks (qualifier value)',origin_id:'307477007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="155" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every forty eight hours',origin_id:'6401097',origin_version:'1',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="156" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every forty eight hours',origin_id:'6401097',origin_version:'1',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="157" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="158" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every forty eight hours',origin_id:'6401097',origin_version:'1',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'caDSR'}), (n1:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="159" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every forty eight hours',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="160" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'}), (n1:term {value:'Every forty eight hours',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="161" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every 48 hours',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="162" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'}), (n1:term {value:'Every 48 hours',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="163" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every forty eight hours (qualifier value)',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="164" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'}), (n1:term {value:'Every forty eight hours (qualifier value)',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="165" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'q48hr',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="166" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every Forty-eight Hours',origin_id:'C89790',origin_definition:'To be done at regular intervals of every 48 hours.',origin_name:'NCIt'}), (n1:term {value:'q48hr',origin_id:'396131002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="167" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="168" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="169" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}), (n1:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="170" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="171" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'2567171',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'caDSR'}), (n1:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="172" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Male',origin_id:'LA2-8',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="173" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}), (n1:term {value:'Male',origin_id:'LA2-8',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="174" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'M',origin_id:'LA15170-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="175" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Male',origin_id:'C20197',origin_definition:'An individual who belongs to the sex that normally produces sperm.',origin_name:'NCIt'}), (n1:term {value:'M',origin_id:'LA15170-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="176" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="177" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'7572817|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/7572817'}), (n1:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="178" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="179" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'2567172',origin_version:'1',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'caDSR'}), (n1:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="180" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="181" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="182" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="183" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="184" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'female',origin_id:'RID5654',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="185" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'female',origin_id:'RID5654',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="186" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female structure (body structure)',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="187" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female structure (body structure)',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="188" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female (finding)',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="189" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female (finding)',origin_id:'248152002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="190" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female individual',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="191" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female individual',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="192" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female structure',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="193" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female structure',origin_id:'1086007',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="194" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Female',origin_id:'LA3-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="195" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Female',origin_id:'C16576',origin_definition:'An individual who belongs to the sex that normally produces ova.',origin_name:'NCIt'}), (n1:term {value:'Female',origin_id:'LA3-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="196" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="197" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="198" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="199" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="200" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="201" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="202" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="203" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="204" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="205" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="206" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="207" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="208" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="209" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="210" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="211" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="212" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="213" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="214" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="215" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="216" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="217" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="218" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="219" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="220" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="221" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="222" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="223" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="224" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="225" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="226" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="227" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="228" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="229" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="230" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="231" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="232" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="233" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="234" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="235" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="236" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="237" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="238" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="239" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="240" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="241" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="242" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="243" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="244" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="245" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="246" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="247" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="248" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="249" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="250" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="251" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="252" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="253" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="254" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="255" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="256" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="257" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="258" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="259" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'2567359',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="260" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'g',origin_id:'2567359',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="261" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="262" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'g',origin_id:'2567359',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="263" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="264" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="265" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="266" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="267" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="268" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="269" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="270" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="271" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="272" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="273" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kg',origin_id:'2567608',origin_version:'1',origin_definition:'A basic SI unit of mass. It is definied as the mass of an  international prototype in the form of a platinum-iridium cylinder kept at Sevres in france.   A kilogram is equal to 1,000 grams and 2.2046226 pounds.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="274" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'kg',origin_id:'2567608',origin_version:'1',origin_definition:'A basic SI unit of mass. It is definied as the mass of an  international prototype in the form of a platinum-iridium cylinder kept at Sevres in france.   A kilogram is equal to 1,000 grams and 2.2046226 pounds.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="275" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="276" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'kg',origin_id:'2567608',origin_version:'1',origin_definition:'A basic SI unit of mass. It is definied as the mass of an  international prototype in the form of a platinum-iridium cylinder kept at Sevres in france.   A kilogram is equal to 1,000 grams and 2.2046226 pounds.',origin_name:'caDSR'}), (n1:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="277" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="278" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="279" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2024_03_28',origin_name:'GO'})</neo4j:cypher>
  </changeSet>
  <changeSet id="280" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2024_03_28',origin_name:'GO'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="281" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="282" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="283" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="284" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="285" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="286" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="287" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="288" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="289" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="290" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="291" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="292" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="293" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="294" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="295" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="296" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="297" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2023_05_10',origin_name:'GO'})</neo4j:cypher>
  </changeSet>
  <changeSet id="298" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2023_05_10',origin_name:'GO'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="299" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="300" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="301" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="302" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="303" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="304" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="305" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'set of cells',origin_id:'RID13253',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="306" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'set of cells',origin_id:'RID13253',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="307" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="308" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="309" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="310" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="311" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="312" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="313" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="314" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="315" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cell',origin_id:'RID39348',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="316" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cell',origin_id:'RID39348',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="317" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="318" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="319" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="320" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="321" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Kilogram',origin_id:'C28252',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="322" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Kilogram',origin_id:'C28252',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="323" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="324" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="325" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kg',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="326" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kg',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="327" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'L',origin_id:'2569393',origin_version:'1',origin_definition:'A common metric unit of volume equal to one cubic decimeter, 1000 cubic centimeters, or 0.001 cubic meter, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="328" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2321160|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2321160?version=4'}), (n1:term {value:'L',origin_id:'2569393',origin_version:'1',origin_definition:'A common metric unit of volume equal to one cubic decimeter, 1000 cubic centimeters, or 0.001 cubic meter, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="329" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="330" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'L',origin_id:'2569393',origin_version:'1',origin_definition:'A common metric unit of volume equal to one cubic decimeter, 1000 cubic centimeters, or 0.001 cubic meter, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}), (n1:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="331" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Litre',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="332" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Litre',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="333" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="334" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="335" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="336" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="337" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Litre',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="338" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Litre',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="339" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="340" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="341" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'C48505',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="342" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'C48505',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="343" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'L',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="344" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'L',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="345" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="346" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="347" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="348" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="349" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="350" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="351" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="352" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="353" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="354" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="355" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="356" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="357" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="358" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="359" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="360" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="361" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="362" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="363" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="364" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'13383458|1',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/13383458?version=1'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="365" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="366" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'13383458|1',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/13383458?version=1'}), (n1:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="367" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="368" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="369" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="370" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="371" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="372" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="373" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="374" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="375" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="376" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="377" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="378" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="379" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="380" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="381" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="382" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="383" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'5035619',origin_version:'1',origin_definition:'A metric unit of mass equal to one thousandth of a gram or 1000 micrograms. One milligram equals approximately 0.015 432 grain or 35.274 x 10E-6 ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="384" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'13383458|1',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/13383458?version=1'}), (n1:term {value:'mg',origin_id:'5035619',origin_version:'1',origin_definition:'A metric unit of mass equal to one thousandth of a gram or 1000 micrograms. One milligram equals approximately 0.015 432 grain or 35.274 x 10E-6 ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="385" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="386" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mg',origin_id:'5035619',origin_version:'1',origin_definition:'A metric unit of mass equal to one thousandth of a gram or 1000 micrograms. One milligram equals approximately 0.015 432 grain or 35.274 x 10E-6 ounce.',origin_name:'caDSR'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="387" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="388" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="389" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="390" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="391" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="392" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="393" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="394" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="395" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="396" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="397" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="398" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="399" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="400" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="401" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'5035618',origin_version:'1',origin_definition:'A unit of volume equal to one millionth (10E-6) of a cubic meter, one thousandth of a liter, one cubic centimeter, or 0.061023 7 cubic inch. A cubic centimeter is the CGS unit of volume.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="402" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'13383458|1',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/13383458?version=1'}), (n1:term {value:'mL',origin_id:'5035618',origin_version:'1',origin_definition:'A unit of volume equal to one millionth (10E-6) of a cubic meter, one thousandth of a liter, one cubic centimeter, or 0.061023 7 cubic inch. A cubic centimeter is the CGS unit of volume.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="403" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="404" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mL',origin_id:'5035618',origin_version:'1',origin_definition:'A unit of volume equal to one millionth (10E-6) of a cubic meter, one thousandth of a liter, one cubic centimeter, or 0.061023 7 cubic inch. A cubic centimeter is the CGS unit of volume.',origin_name:'caDSR'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="405" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="406" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="407" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="408" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="409" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="410" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="411" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="412" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="413" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="414" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="415" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="416" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="417" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="418" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="419" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="420" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="421" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="422" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="423" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="424" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="425" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="426" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="427" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2179671|2.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179671?version=2.00'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="428" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="429" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2179671|2.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179671?version=2.00'}), (n1:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="430" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="431" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="432" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="433" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="434" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="435" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="436" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="437" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="438" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="439" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="440" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="441" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="442" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="443" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="444" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="445" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="446" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mL',origin_id:'2567406',origin_version:'1',origin_definition:'A measure of volume for a liquid.  A milliliter is approximately 950 times smaller than a quart and 30 times smaller than a fluid ounce.  A milliliter of liquid and a cubic centimeter (cc) of liquid are the same.',origin_name:'caDSR'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="447" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="448" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="449" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="450" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="451" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="452" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="453" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="454" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="455" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="456" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Millilitre',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="457" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="458" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="459" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="460" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter (qualifier value)',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="461" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="462" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cm3',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="463" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="464" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cc',origin_id:'258773002',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="465" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="466" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milliliter',origin_id:'C28254',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="467" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="468" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Millilitre',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mL',origin_id:'258773002',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="469" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="470" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="471" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="472" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'mg',origin_id:'2569666',origin_version:'1',origin_definition:'A measure of weight.  A milligram is approximately 450,000 times smaller than a pound and 28,000 times smaller than an ounce.',origin_name:'caDSR'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="473" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="474" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="475" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="476" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="477" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="478" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'milligram',origin_id:'258684004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="479" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="480" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_version:'20.10d',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="481" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="482" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Milligram',origin_id:'C28253',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="483" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="484" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="485" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="486" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'milligram (qualifier value)',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'mg',origin_id:'258684004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="487" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="488" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="489" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="490" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'g',origin_id:'2567649',origin_version:'1',origin_definition:'A metric unit of mass equal to one one thousandth of a kilogram.',origin_name:'caDSR'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="491" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="492" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="493" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="494" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="495" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="496" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Gram',origin_id:'C48155',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="497" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="498" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'gram (qualifier value)',origin_id:'258682000',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="499" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="500" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'gram',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'g',origin_id:'258682000',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="501" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'L',origin_id:'5656836',origin_version:'1',origin_definition:'The non-SI unit of volume accepted for use with the SI. One liter is equal to cubic decimeter, or one thousandth of cubic meter, or 1000 cubic centimeters, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="502" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'L',origin_id:'5656836',origin_version:'1',origin_definition:'The non-SI unit of volume accepted for use with the SI. One liter is equal to cubic decimeter, or one thousandth of cubic meter, or 1000 cubic centimeters, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="503" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="504" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'L',origin_id:'5656836',origin_version:'1',origin_definition:'The non-SI unit of volume accepted for use with the SI. One liter is equal to cubic decimeter, or one thousandth of cubic meter, or 1000 cubic centimeters, or approximately 61.023 744 cubic inches.',origin_name:'caDSR'}), (n1:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="505" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Litre',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="506" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Litre',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="507" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="508" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="509" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="510" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="511" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Litre',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="512" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Litre',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="513" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="514" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'258770004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="515" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Liter',origin_id:'C48505',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="516" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Liter',origin_id:'C48505',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="517" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'L',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="518" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Liter (qualifier value)',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'L',origin_id:'258770004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="519" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'uCi',origin_id:'2725147',origin_version:'1',origin_definition:'A unit of radioactivity equal to one millionth of a curie or 37 kilobecquerels, and corresponding to a radioactivity of 37 000 atomic disintegrations per second.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="520" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'uCi',origin_id:'2725147',origin_version:'1',origin_definition:'A unit of radioactivity equal to one millionth of a curie or 37 kilobecquerels, and corresponding to a radioactivity of 37 000 atomic disintegrations per second.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="521" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="522" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'uCi',origin_id:'2725147',origin_version:'1',origin_definition:'A unit of radioactivity equal to one millionth of a curie or 37 kilobecquerels, and corresponding to a radioactivity of 37 000 atomic disintegrations per second.',origin_name:'caDSR'}), (n1:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="523" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'microcurie',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="524" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'microcurie',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="525" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Microcurie',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="526" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Microcurie',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="527" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="528" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="529" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'microcurie',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="530" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'microcurie',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="531" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Microcurie',origin_id:'C48507',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="532" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Microcurie',origin_id:'C48507',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="533" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Microcurie',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="534" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Microcurie',origin_id:'282111001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="535" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'uCi',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="536" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Microcurie (qualifier value)',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'uCi',origin_id:'282111001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="537" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="538" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="539" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="540" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'oz',origin_id:'2569429',origin_version:'1',origin_definition:'The traditional unit of mass. The avoirdupois ounce is equal to 1/16 pound, or 28.3495 grams, or 0.911 457 troy ounce.',origin_name:'caDSR'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="541" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="542" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="543" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="544" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="545" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="546" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="547" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="548" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounces',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="549" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="550" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'ounce',origin_id:'258692008',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="551" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="552" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Ounce',origin_id:'C48519',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="553" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="554" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'ounces (qualifier value)',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'oz',origin_id:'258692008',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="555" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kg',origin_id:'2672538',origin_version:'1',origin_definition:'A basic SI unit of mass. It is defined as the mass of an international prototype in the form of a platinum-iridium cylinder kept at Sevres in France. A kilogram is equal to 1,000 grams and 2.204 622 6 pounds.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="556" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'6824805|5.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/6824805?version=5.00'}), (n1:term {value:'kg',origin_id:'2672538',origin_version:'1',origin_definition:'A basic SI unit of mass. It is defined as the mass of an international prototype in the form of a platinum-iridium cylinder kept at Sevres in France. A kilogram is equal to 1,000 grams and 2.204 622 6 pounds.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="557" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="558" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'kg',origin_id:'2672538',origin_version:'1',origin_definition:'A basic SI unit of mass. It is defined as the mass of an international prototype in the form of a platinum-iridium cylinder kept at Sevres in France. A kilogram is equal to 1,000 grams and 2.204 622 6 pounds.',origin_name:'caDSR'}), (n1:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="559" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="560" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="561" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2024_03_28',origin_name:'GO'})</neo4j:cypher>
  </changeSet>
  <changeSet id="562" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2024_03_28',origin_name:'GO'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="563" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="564" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="565" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="566" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="567" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="568" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="569" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="570" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="571" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="572" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="573" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="574" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="575" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="576" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="577" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="578" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="579" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2023_05_10',origin_name:'GO'})</neo4j:cypher>
  </changeSet>
  <changeSet id="580" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'obsolete cell',origin_id:'GO:0005623',origin_version:'2023_05_10',origin_name:'GO'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="581" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="582" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structures',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="583" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="584" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cellular structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="585" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="586" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="587" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'set of cells',origin_id:'RID13253',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="588" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'set of cells',origin_id:'RID13253',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="589" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="590" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="591" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="592" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell structure (cell structure)',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="593" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="594" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Normal cell (cell)',origin_id:'118957004',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="595" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cell',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="596" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cell',origin_id:'4421005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="597" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'cell',origin_id:'RID39348',origin_version:'4_1',origin_name:'RADLEX'})</neo4j:cypher>
  </changeSet>
  <changeSet id="598" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'cell',origin_id:'RID39348',origin_version:'4_1',origin_name:'RADLEX'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="599" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="600" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Cells',origin_id:'MTHU001933',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="601" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="602" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram (qualifier value)',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="603" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Kilogram',origin_id:'C28252',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="604" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Kilogram',origin_id:'C28252',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="605" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kilogram',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="606" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kilogram',origin_id:'258683005',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="607" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'kg',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="608" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Cell structure',origin_id:'4421005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'kg',origin_id:'258683005',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="609" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2179580|1.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179580?version=1.00'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="610" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '587d9612fb5120815ea57af97a3a5b3f346d39e1'</neo4j:cypher>
  </changeSet>
  <changeSet id="611" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2179580|1.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179580?version=1.00'}), (n1:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="612" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="613" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="614" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="615" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="616" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="617" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="618" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="619" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="620" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="621" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="622" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="623" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="624" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="625" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="626" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="627" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2025_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_80',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'587d9612fb5120815ea57af97a3a5b3f346d39e1'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
</databaseChangeLog>
<?xml version='1.0' encoding='UTF-8'?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:neo4j="http://www.liquibase.org/xml/ns/dbchangelog-ext" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
  <changeSet id="1" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="2" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="3" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="4" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Statistical Analysis System File Format',origin_id:'C219045',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="5" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}), (n1:term {value:'Statistical Analysis System File Format',origin_id:'C219045',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="6" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="7" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="8" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SPSS File Format',origin_id:'C219046',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="9" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}), (n1:term {value:'SPSS File Format',origin_id:'C219046',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="10" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="11" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="12" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'STATA Statistical Software for Data Science',origin_id:'C219047',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="13" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}), (n1:term {value:'STATA Statistical Software for Data Science',origin_id:'C219047',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="14" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="15" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="16" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS Binary Format',origin_id:'C219048',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="17" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}), (n1:term {value:'SAS Binary Format',origin_id:'C219048',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="18" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="19" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="20" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="21" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Statistical Analysis System File Format',origin_id:'C219045',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="22" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SAS',origin_id:'16284377',origin_version:'1',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'caDSR'}), (n1:term {value:'Statistical Analysis System File Format',origin_id:'C219045',origin_definition:'A structured file used by Statistical Analysis System (SAS) software. It can store data, metadata, and other information, and is often part of a SAS library.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="23" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="24" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="25" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SPSS File Format',origin_id:'C219046',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="26" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SPSS',origin_id:'16284380',origin_version:'1',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'caDSR'}), (n1:term {value:'SPSS File Format',origin_id:'C219046',origin_definition:'A binary format used by IBM SPSS Statistics (formerly known as Statistical Package for the Social Sciences) for storing data and associated metadata.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="27" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="28" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="29" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'STATA Statistical Software for Data Science',origin_id:'C219047',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="30" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'STATA',origin_id:'16284382',origin_version:'1',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'caDSR'}), (n1:term {value:'STATA Statistical Software for Data Science',origin_id:'C219047',origin_definition:'A general-purpose statistical software package for data manipulation, visualization, statistics, and automated reporting.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="31" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="32" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'11416926|',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/11416926'}), (n1:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="33" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'SAS Binary Format',origin_id:'C219048',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="34" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'SAS binary',origin_id:'16284383',origin_version:'1',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'caDSR'}), (n1:term {value:'SAS Binary Format',origin_id:'C219048',origin_definition:'A format within the SAS statistical analysis system used to convert numeric or character values to their binary representation.',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="35" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="36" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="37" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2003878|4',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2003878?version=4'}), (n1:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="38" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="39" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="40" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="41" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="42" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="43" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="44" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="45" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="46" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="47" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="48" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="49" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="50" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="51" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="52" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:value_set {handle:'2179580|1.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179580?version=1.00'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="53" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) ON CREATE SET n0._commit = '9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'</neo4j:cypher>
  </changeSet>
  <changeSet id="54" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:value_set {handle:'2179580|1.00',url:'https://cadsrapi.cancer.gov/rad/NCIAPI/1.0/api/DataElement/2179580?version=1.00'}), (n1:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}) MERGE (n0)-[r0:has_term]-&gt;(n1)</neo4j:cypher>
  </changeSet>
  <changeSet id="55" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="56" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning',origin_id:'2567826',origin_version:'1',origin_definition:'Every morning.',origin_name:'caDSR'}), (n1:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'caDSR'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'caDSR'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="57" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="58" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every Morning',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="59" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'})</neo4j:cypher>
  </changeSet>
  <changeSet id="60" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'QAM',origin_id:'C64595',origin_name:'NCIt'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="61" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="62" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="63" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="64" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="65" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'})</neo4j:cypher>
  </changeSet>
  <changeSet id="66" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
  <changeSet id="67" author="GitHub Actions Bot">
    <neo4j:cypher>MERGE (n0:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'})</neo4j:cypher>
  </changeSet>
  <changeSet id="68" author="GitHub Actions Bot">
    <neo4j:cypher>MATCH (n0:term {value:'Every morning (qualifier value)',origin_id:'307472001',origin_version:'2024_03_01',origin_name:'SNOMEDCT_US'}), (n1:term {value:'Every morning',origin_id:'LA27719-6',origin_version:'2_77',origin_name:'LNC'}) WHERE (n0)  &lt;&gt;  (n1) WITH (n0), (n1) OPTIONAL MATCH (n0)-[r0:represents]-&gt;(n2:concept)-[r2:has_tag]-&gt;(n4:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2) LIMIT 1 OPTIONAL MATCH (n1)-[r1:represents]-&gt;(n3:concept)-[r3:has_tag]-&gt;(n5:tag {key:'mapping_source',value:'NCIm'}) WITH (n0), (n1), (n2), (n3) LIMIT 1 WITH (n0), (n1) , CASE WHEN (n2) IS NOT NULL THEN (n2) WHEN (n3) IS NOT NULL THEN (n3) ELSE NULL END AS existing_concept  FOREACH  (_ IN CASE WHEN existing_concept IS NOT NULL THEN [1] ELSE [] END | MERGE (n0)-[:represents]-&gt;(existing_concept) MERGE (n1)-[:represents]-&gt;(existing_concept) ) FOREACH  (_ IN CASE WHEN existing_concept IS NULL THEN [1] ELSE [] END | CREATE (n6:concept {_commit:'9b9cfcdf1e7a8520d93dd4239c48bffdbeb0a3fb'}) CREATE (n6)-[r4:has_tag]-&gt;(n7:tag {key:'mapping_source',value:'NCIm'}) CREATE (n0)-[r5:represents]-&gt;(n6) CREATE (n1)-[r6:represents]-&gt;(n6) )</neo4j:cypher>
  </changeSet>
</databaseChangeLog>
name: Generate and Commit Term Update Changelog

on:
  schedule:
    - cron: "12 5 * * 6" # runs weekly on Saturday at 05:12 UTC/01:12 AM EDT
  workflow_dispatch:
    inputs:
      author:
        description: "Author name for changes"
        required: false
        default: "GitHub Actions"
      commit_sha:
        description: "Commit SHA for reference"
        required: false
        default: ""
      dh_tier:
        description: "Data Hub tier to update"
        required: true
        type: choice
        options:
          - "upper"
          - "lower"
          - "both"
        default: "both"
      log_level:
        description: "Log level"
        required: false
        type: string
        default: "info"
      dry_run:
        description: "Dry run flag"
        required: false
        type: boolean
        default: false
      no_commit:
        description: "Don't commit changes to GitHub."
        required: false
        type: boolean
        default: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          TIER="${{ github.event.inputs.dh_tier }}"
          BASE_MATRIX='{
            "include": [
              { "name": "nightly", "mdb_uri": "jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8587", "mdb_id": "og-mdb-nightly", "dh_tier": "lower" },
              { "name": "dev", "mdb_uri": "jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8687", "mdb_id": "og-mdb-dev", "dh_tier": "upper" }
            ]
          }'
          if [ "$TIER" = "lower" ]; then
            MATRIX='{ "include":[ { "name": "nightly", "mdb_uri": "jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8587", "mdb_id": "og-mdb-nightly", "dh_tier": "lower" } ] }'
          elif [ "$TIER" = "upper" ]; then
            MATRIX='{ "include":[ { "name": "dev", "mdb_uri": "jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8687", "mdb_id": "og-mdb-dev", "dh_tier": "upper" } ] }'
          else
            MATRIX="$BASE_MATRIX"
          fi

          MATRIX=$(echo "$MATRIX" | jq -c .)

          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"


  update-mdb-terms:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    outputs:
      changelog_files_nightly: ${{ steps.update-terms.outputs.changelog_files && matrix.name == 'nightly' && steps.update-terms.outputs.changelog_files || '' }}
      changelog_files_dev: ${{ steps.update-terms.outputs.changelog_files && matrix.name == 'dev' && steps.update-terms.outputs.changelog_files || '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.10"

      - name: Install dependencies and project
        run: |
          uv pip install --system -e .
          uv sync --all-extras --dev
      
      - name: Update terms
        id: update-terms
        env:
          PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
          PREFECT_API_URL: ${{ secrets.PREFECT_API_URL }}
        run: |
          PARAMS=$(jq -n \
          --arg mdb_uri "${{ matrix.mdb_uri }}" \
          --arg mdb_user "neo4j" \
          --arg mdb_id "${{ matrix.mdb_id }}" \
          --arg author "${{ github.event.inputs.author || 'GitHub Actions Bot' }}" \
          --arg commit "${{ github.event.inputs.commit_sha || github.sha }}" \
          --argjson no_commit "${{ github.event.inputs.no_commit || false }}" \
          '{
            "mdb_uri": $mdb_uri,
            "mdb_user": $mdb_user,
            "mdb_id": $mdb_id,
            "author": $author,
            "commit": $commit,
            "no_commit": $no_commit
          }')
          echo "PARAMS=$PARAMS"

          prefect deployment run update-terms/update-terms \
            --params "$PARAMS" \
            --watch \
            --watch-interval 30 2>&1 | tee run.log

          RESULT_JSON=$(grep '^RESULT_JSON:' run.log | head -n1 | sed 's/^RESULT_JSON://')
          echo "RESULT_JSON=$RESULT_JSON"

          echo "changelog_files=$RESULT_JSON" >> $GITHUB_OUTPUT
          echo "mdb_name=${{ matrix.name }}" >> $GITHUB_OUTPUT
          echo "Changelog files for ${{ matrix.name }}: $CHANGELOG_FILES"


  update-mdb-nightly-and-dh-lower:
    needs: [setup, update-mdb-terms]
    if: ${{ needs.update-mdb-terms.outputs.changelog_files_nightly != '' && needs.update-mdb-terms.outputs.changelog_files_nightly != '[]' }}
    uses: ./.github/workflows/update_mdb_and_dh.yml
    secrets: inherit
    with:
      mdb_uri: jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8587
      mdb_user: neo4j
      mdb_id: og-mdb-nightly
      dh_tier: lower
      changelog_files: ${{ needs.update-mdb-terms.outputs.changelog_files_nightly }}
      dry_run: ${{ github.event.inputs.dry_run}}
      no_commit: ${{ github.event.inputs.no_commit }}
      log_level: ${{ github.event.inputs.log_level || 'info' }}

  update-mdb-dev-and-dh-upper:
    needs: [setup, update-mdb-terms]
    if: ${{ needs.update-mdb-terms.outputs.changelog_files_dev != '' && needs.update-mdb-terms.outputs.changelog_files_dev != '[]' }}
    uses: ./.github/workflows/update_mdb_and_dh.yml
    secrets: inherit
    with:
      mdb_uri: jdbc:neo4j:bolt://ip-172-30-0-18.ec2.internal:8687
      mdb_user: neo4j
      mdb_id: og-mdb-dev
      dh_tier: upper
      changelog_files: ${{ needs.update-mdb-terms.outputs.changelog_files_dev }}
      dry_run: ${{ github.event.inputs.dry_run }}
      no_commit: ${{ github.event.inputs.no_commit}}
      log_level: ${{ github.event.inputs.log_level || 'info' }}